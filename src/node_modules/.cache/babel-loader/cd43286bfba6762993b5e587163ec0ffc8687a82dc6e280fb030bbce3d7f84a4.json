{"ast":null,"code":"var _jsxFileName = \"/home/noxirongky/code/stima/tucil2/src/src/components/CanvasComponents.tsx\",\n  _s = $RefreshSig$();\n// CanvasComponent.tsx\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasComponent = ({\n  points,\n  bezierPoints\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  let width, height;\n  for (let i = 0; i < points.length; i++) {}\n  const drawLine = (context, start, end, color = \"black\") => {\n    context.beginPath();\n    context.moveTo(start.x, start.y);\n    context.lineTo(end.x, end.y);\n    context.strokeStyle = color;\n    context.stroke();\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const context = canvas.getContext(\"2d\");\n      if (context) {\n        // Clear the canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // Draw the segments\n        for (let i = 0; i < points.length - 1; i++) {\n          drawLine(context, points[i], points[i + 1], \"blue\");\n        }\n\n        // Draw the bezier curve\n        for (let i = 0; i < bezierPoints.length - 1; i++) {\n          drawLine(context, bezierPoints[i], bezierPoints[i + 1], \"red\");\n        }\n      }\n    }\n  }, [points, bezierPoints]); // Redraw when points or bezierPoints change\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: 500,\n    height: 500\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_s(CanvasComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CanvasComponent;\nexport default CanvasComponent;\nvar _c;\n$RefreshReg$(_c, \"CanvasComponent\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","CanvasComponent","points","bezierPoints","_s","canvasRef","width","height","i","length","drawLine","context","start","end","color","beginPath","moveTo","x","y","lineTo","strokeStyle","stroke","canvas","current","getContext","clearRect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/noxirongky/code/stima/tucil2/src/src/components/CanvasComponents.tsx"],"sourcesContent":["// CanvasComponent.tsx\nimport React, { useRef, useEffect } from \"react\";\n\ntype Point = {\n  x: number;\n  y: number;\n};\n\ninterface CanvasProps {\n  points: Point[];\n  bezierPoints: Point[];\n}\n\nconst CanvasComponent: React.FC<CanvasProps> = ({ points, bezierPoints }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  let width, height;\n  for (let i = 0; i < points.length; i++) {}\n\n  const drawLine = (\n    context: CanvasRenderingContext2D,\n    start: Point,\n    end: Point,\n    color: string = \"black\"\n  ) => {\n    context.beginPath();\n    context.moveTo(start.x, start.y);\n    context.lineTo(end.x, end.y);\n    context.strokeStyle = color;\n    context.stroke();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const context = canvas.getContext(\"2d\");\n      if (context) {\n        // Clear the canvas\n        context.clearRect(0, 0, canvas.width, canvas.height);\n\n        // Draw the segments\n        for (let i = 0; i < points.length - 1; i++) {\n          drawLine(context, points[i], points[i + 1], \"blue\");\n        }\n\n        // Draw the bezier curve\n        for (let i = 0; i < bezierPoints.length - 1; i++) {\n          drawLine(context, bezierPoints[i], bezierPoints[i + 1], \"red\");\n        }\n      }\n    }\n  }, [points, bezierPoints]); // Redraw when points or bezierPoints change\n\n  return <canvas ref={canvasRef} width={500} height={500} />;\n};\n\nexport default CanvasComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYjD,MAAMC,eAAsC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAMC,SAAS,GAAGR,MAAM,CAAoB,IAAI,CAAC;EAEjD,IAAIS,KAAK,EAAEC,MAAM;EACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE,CAAC;EAEzC,MAAME,QAAQ,GAAGA,CACfC,OAAiC,EACjCC,KAAY,EACZC,GAAU,EACVC,KAAa,GAAG,OAAO,KACpB;IACHH,OAAO,CAACI,SAAS,CAAC,CAAC;IACnBJ,OAAO,CAACK,MAAM,CAACJ,KAAK,CAACK,CAAC,EAAEL,KAAK,CAACM,CAAC,CAAC;IAChCP,OAAO,CAACQ,MAAM,CAACN,GAAG,CAACI,CAAC,EAAEJ,GAAG,CAACK,CAAC,CAAC;IAC5BP,OAAO,CAACS,WAAW,GAAGN,KAAK;IAC3BH,OAAO,CAACU,MAAM,CAAC,CAAC;EAClB,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd,MAAMwB,MAAM,GAAGjB,SAAS,CAACkB,OAAO;IAChC,IAAID,MAAM,EAAE;MACV,MAAMX,OAAO,GAAGW,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MACvC,IAAIb,OAAO,EAAE;QACX;QACAA,OAAO,CAACc,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEH,MAAM,CAAChB,KAAK,EAAEgB,MAAM,CAACf,MAAM,CAAC;;QAEpD;QACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;UAC1CE,QAAQ,CAACC,OAAO,EAAET,MAAM,CAACM,CAAC,CAAC,EAAEN,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;QACrD;;QAEA;QACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,CAACM,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;UAChDE,QAAQ,CAACC,OAAO,EAAER,YAAY,CAACK,CAAC,CAAC,EAAEL,YAAY,CAACK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;QAChE;MACF;IACF;EACF,CAAC,EAAE,CAACN,MAAM,EAAEC,YAAY,CAAC,CAAC,CAAC,CAAC;;EAE5B,oBAAOH,OAAA;IAAQ0B,GAAG,EAAErB,SAAU;IAACC,KAAK,EAAE,GAAI;IAACC,MAAM,EAAE;EAAI;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC5D,CAAC;AAAC1B,EAAA,CAzCIH,eAAsC;AAAA8B,EAAA,GAAtC9B,eAAsC;AA2C5C,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}