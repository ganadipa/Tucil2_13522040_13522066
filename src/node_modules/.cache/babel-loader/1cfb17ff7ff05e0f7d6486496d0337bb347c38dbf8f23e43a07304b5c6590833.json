{"ast":null,"code":"var _jsxFileName = \"/home/noxirongky/code/stima/tucil2/src/src/components/CanvasComponents.tsx\",\n  _s = $RefreshSig$();\n// CanvasComponent.tsx\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasComponent = ({\n  points,\n  bezierPoints\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  let width = 15,\n    height = 15;\n  for (let i = 0; i < points.length; i++) {\n    width = Math.max(points[i].x, width);\n    height = Math.max(points[i].y, height);\n  }\n  for (let i = 0; i < bezierPoints.length; i++) {\n    width = Math.max(bezierPoints[i].x, width);\n    height = Math.max(bezierPoints[i].y, height);\n  }\n  const drawGrid = (context, width, height) => {\n    const gridSize = Math.min(width / 10, height / 10); // Define the size of the grid\n    context.strokeStyle = \"#e9e9e9\"; // Light grey color for the grid lines\n\n    // Draw vertical grid lines\n    for (let x = 0; x <= width; x += gridSize) {\n      context.beginPath();\n      context.moveTo(x, 0);\n      context.lineTo(x, height);\n      context.stroke();\n    }\n\n    // Draw horizontal grid lines\n    for (let y = 0; y <= height; y += gridSize) {\n      context.beginPath();\n      context.moveTo(0, y);\n      context.lineTo(width, y);\n      context.stroke();\n    }\n  };\n  const drawLine = (context, start, end, color = \"black\") => {\n    context.beginPath();\n    context.moveTo(start.x, start.y);\n    context.lineTo(end.x, end.y);\n    context.strokeStyle = color;\n    context.stroke();\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const context = canvas.getContext(\"2d\");\n      if (context) {\n        // Clear the canvas\n        context.clearRect(0, 0, width, height);\n\n        // Draw the grid\n        drawGrid(context, width, height);\n\n        // Draw the segments\n        for (let i = 0; i < points.length - 1; i++) {\n          drawLine(context, points[i], points[i + 1], \"blue\");\n        }\n\n        // Draw the bezier curve\n        for (let i = 0; i < bezierPoints.length - 1; i++) {\n          drawLine(context, bezierPoints[i], bezierPoints[i + 1], \"red\");\n        }\n      }\n    }\n  }, [points, bezierPoints, width, height]); // Redraw when points, bezierPoints, width, or height change\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: width,\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 10\n  }, this);\n};\n_s(CanvasComponent, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = CanvasComponent;\nexport default CanvasComponent;\nvar _c;\n$RefreshReg$(_c, \"CanvasComponent\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","CanvasComponent","points","bezierPoints","_s","canvasRef","width","height","i","length","Math","max","x","y","drawGrid","context","gridSize","min","strokeStyle","beginPath","moveTo","lineTo","stroke","drawLine","start","end","color","canvas","current","getContext","clearRect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/noxirongky/code/stima/tucil2/src/src/components/CanvasComponents.tsx"],"sourcesContent":["// CanvasComponent.tsx\nimport React, { useRef, useEffect } from \"react\";\n\ntype Point = {\n  x: number;\n  y: number;\n};\n\ninterface CanvasProps {\n  points: Point[];\n  bezierPoints: Point[];\n}\n\nconst CanvasComponent: React.FC<CanvasProps> = ({ points, bezierPoints }) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  let width = 15,\n    height = 15;\n  for (let i = 0; i < points.length; i++) {\n    width = Math.max(points[i].x, width);\n    height = Math.max(points[i].y, height);\n  }\n\n  for (let i = 0; i < bezierPoints.length; i++) {\n    width = Math.max(bezierPoints[i].x, width);\n    height = Math.max(bezierPoints[i].y, height);\n  }\n\n  const drawGrid = (\n    context: CanvasRenderingContext2D,\n    width: number,\n    height: number\n  ) => {\n    const gridSize = Math.min(width / 10, height / 10); // Define the size of the grid\n    context.strokeStyle = \"#e9e9e9\"; // Light grey color for the grid lines\n\n    // Draw vertical grid lines\n    for (let x = 0; x <= width; x += gridSize) {\n      context.beginPath();\n      context.moveTo(x, 0);\n      context.lineTo(x, height);\n      context.stroke();\n    }\n\n    // Draw horizontal grid lines\n    for (let y = 0; y <= height; y += gridSize) {\n      context.beginPath();\n      context.moveTo(0, y);\n      context.lineTo(width, y);\n      context.stroke();\n    }\n  };\n\n  const drawLine = (\n    context: CanvasRenderingContext2D,\n    start: Point,\n    end: Point,\n    color: string = \"black\"\n  ) => {\n    context.beginPath();\n    context.moveTo(start.x, start.y);\n    context.lineTo(end.x, end.y);\n    context.strokeStyle = color;\n    context.stroke();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      const context = canvas.getContext(\"2d\");\n      if (context) {\n        // Clear the canvas\n        context.clearRect(0, 0, width, height);\n\n        // Draw the grid\n        drawGrid(context, width, height);\n\n        // Draw the segments\n        for (let i = 0; i < points.length - 1; i++) {\n          drawLine(context, points[i], points[i + 1], \"blue\");\n        }\n\n        // Draw the bezier curve\n        for (let i = 0; i < bezierPoints.length - 1; i++) {\n          drawLine(context, bezierPoints[i], bezierPoints[i + 1], \"red\");\n        }\n      }\n    }\n  }, [points, bezierPoints, width, height]); // Redraw when points, bezierPoints, width, or height change\n\n  return <canvas ref={canvasRef} width={width} height={height} />;\n};\n\nexport default CanvasComponent;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYjD,MAAMC,eAAsC,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAMC,SAAS,GAAGR,MAAM,CAAoB,IAAI,CAAC;EAEjD,IAAIS,KAAK,GAAG,EAAE;IACZC,MAAM,GAAG,EAAE;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IACtCF,KAAK,GAAGI,IAAI,CAACC,GAAG,CAACT,MAAM,CAACM,CAAC,CAAC,CAACI,CAAC,EAAEN,KAAK,CAAC;IACpCC,MAAM,GAAGG,IAAI,CAACC,GAAG,CAACT,MAAM,CAACM,CAAC,CAAC,CAACK,CAAC,EAAEN,MAAM,CAAC;EACxC;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IAC5CF,KAAK,GAAGI,IAAI,CAACC,GAAG,CAACR,YAAY,CAACK,CAAC,CAAC,CAACI,CAAC,EAAEN,KAAK,CAAC;IAC1CC,MAAM,GAAGG,IAAI,CAACC,GAAG,CAACR,YAAY,CAACK,CAAC,CAAC,CAACK,CAAC,EAAEN,MAAM,CAAC;EAC9C;EAEA,MAAMO,QAAQ,GAAGA,CACfC,OAAiC,EACjCT,KAAa,EACbC,MAAc,KACX;IACH,MAAMS,QAAQ,GAAGN,IAAI,CAACO,GAAG,CAACX,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;IACpDQ,OAAO,CAACG,WAAW,GAAG,SAAS,CAAC,CAAC;;IAEjC;IACA,KAAK,IAAIN,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,KAAK,EAAEM,CAAC,IAAII,QAAQ,EAAE;MACzCD,OAAO,CAACI,SAAS,CAAC,CAAC;MACnBJ,OAAO,CAACK,MAAM,CAACR,CAAC,EAAE,CAAC,CAAC;MACpBG,OAAO,CAACM,MAAM,CAACT,CAAC,EAAEL,MAAM,CAAC;MACzBQ,OAAO,CAACO,MAAM,CAAC,CAAC;IAClB;;IAEA;IACA,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,MAAM,EAAEM,CAAC,IAAIG,QAAQ,EAAE;MAC1CD,OAAO,CAACI,SAAS,CAAC,CAAC;MACnBJ,OAAO,CAACK,MAAM,CAAC,CAAC,EAAEP,CAAC,CAAC;MACpBE,OAAO,CAACM,MAAM,CAACf,KAAK,EAAEO,CAAC,CAAC;MACxBE,OAAO,CAACO,MAAM,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMC,QAAQ,GAAGA,CACfR,OAAiC,EACjCS,KAAY,EACZC,GAAU,EACVC,KAAa,GAAG,OAAO,KACpB;IACHX,OAAO,CAACI,SAAS,CAAC,CAAC;IACnBJ,OAAO,CAACK,MAAM,CAACI,KAAK,CAACZ,CAAC,EAAEY,KAAK,CAACX,CAAC,CAAC;IAChCE,OAAO,CAACM,MAAM,CAACI,GAAG,CAACb,CAAC,EAAEa,GAAG,CAACZ,CAAC,CAAC;IAC5BE,OAAO,CAACG,WAAW,GAAGQ,KAAK;IAC3BX,OAAO,CAACO,MAAM,CAAC,CAAC;EAClB,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd,MAAM6B,MAAM,GAAGtB,SAAS,CAACuB,OAAO;IAChC,IAAID,MAAM,EAAE;MACV,MAAMZ,OAAO,GAAGY,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;MACvC,IAAId,OAAO,EAAE;QACX;QACAA,OAAO,CAACe,SAAS,CAAC,CAAC,EAAE,CAAC,EAAExB,KAAK,EAAEC,MAAM,CAAC;;QAEtC;QACAO,QAAQ,CAACC,OAAO,EAAET,KAAK,EAAEC,MAAM,CAAC;;QAEhC;QACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,MAAM,CAACO,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;UAC1Ce,QAAQ,CAACR,OAAO,EAAEb,MAAM,CAACM,CAAC,CAAC,EAAEN,MAAM,CAACM,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC;QACrD;;QAEA;QACA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,YAAY,CAACM,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;UAChDe,QAAQ,CAACR,OAAO,EAAEZ,YAAY,CAACK,CAAC,CAAC,EAAEL,YAAY,CAACK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;QAChE;MACF;IACF;EACF,CAAC,EAAE,CAACN,MAAM,EAAEC,YAAY,EAAEG,KAAK,EAAEC,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE3C,oBAAOP,OAAA;IAAQ+B,GAAG,EAAE1B,SAAU;IAACC,KAAK,EAAEA,KAAM;IAACC,MAAM,EAAEA;EAAO;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjE,CAAC;AAAC/B,EAAA,CA9EIH,eAAsC;AAAAmC,EAAA,GAAtCnC,eAAsC;AAgF5C,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}