{"ast":null,"code":"function middlePoint(s) {\n  const xp = (s.start.x + s.end.x) / 2;\n  const yp = (s.start.y + s.end.y) / 2;\n  return {\n    x: xp,\n    y: yp\n  };\n}\n\n// Nyoba dulu dengan iterasi ke 2\nexport function QuadraticBezierCurve(points, iteration) {\n  if (iteration === 1) {\n    const middle1 = middlePoint({\n      start: points[0],\n      end: points[1]\n    });\n    const middle2 = middlePoint({\n      start: points[1],\n      end: points[2]\n    });\n    const middle = middlePoint({\n      start: middle1,\n      end: middle2\n    });\n    return [points[0], middle, points[2]];\n  }\n  const middle1 = middlePoint({\n    start: points[0],\n    end: points[1]\n  });\n  const middle2 = middlePoint({\n    start: points[1],\n    end: points[2]\n  });\n  const middle = middlePoint({\n    start: middle1,\n    end: middle2\n  });\n}\n_c = QuadraticBezierCurve;\nvar _c;\n$RefreshReg$(_c, \"QuadraticBezierCurve\");","map":{"version":3,"names":["middlePoint","s","xp","start","x","end","yp","y","QuadraticBezierCurve","points","iteration","middle1","middle2","middle","_c","$RefreshReg$"],"sources":["/home/noxirongky/code/stima/tucil2/src/src/logic/Bezier.ts"],"sourcesContent":["import { Point, Segment } from \"../types\";\n\nfunction middlePoint(s: Segment): Point {\n  const xp = (s.start.x + s.end.x) / 2;\n  const yp = (s.start.y + s.end.y) / 2;\n  return {\n    x: xp,\n    y: yp,\n  };\n}\n\n// Nyoba dulu dengan iterasi ke 2\nexport function QuadraticBezierCurve(\n  points: Point[],\n  iteration: number\n): Point[] {\n  if (iteration === 1) {\n    const middle1 = middlePoint({ start: points[0], end: points[1] });\n    const middle2 = middlePoint({ start: points[1], end: points[2] });\n    const middle = middlePoint({ start: middle1, end: middle2 });\n\n    return [points[0], middle, points[2]];\n  }\n\n  const middle1 = middlePoint({ start: points[0], end: points[1] });\n  const middle2 = middlePoint({ start: points[1], end: points[2] });\n  const middle = middlePoint({ start: middle1, end: middle2 });\n}\n"],"mappings":"AAEA,SAASA,WAAWA,CAACC,CAAU,EAAS;EACtC,MAAMC,EAAE,GAAG,CAACD,CAAC,CAACE,KAAK,CAACC,CAAC,GAAGH,CAAC,CAACI,GAAG,CAACD,CAAC,IAAI,CAAC;EACpC,MAAME,EAAE,GAAG,CAACL,CAAC,CAACE,KAAK,CAACI,CAAC,GAAGN,CAAC,CAACI,GAAG,CAACE,CAAC,IAAI,CAAC;EACpC,OAAO;IACLH,CAAC,EAAEF,EAAE;IACLK,CAAC,EAAED;EACL,CAAC;AACH;;AAEA;AACA,OAAO,SAASE,oBAAoBA,CAClCC,MAAe,EACfC,SAAiB,EACR;EACT,IAAIA,SAAS,KAAK,CAAC,EAAE;IACnB,MAAMC,OAAO,GAAGX,WAAW,CAAC;MAAEG,KAAK,EAAEM,MAAM,CAAC,CAAC,CAAC;MAAEJ,GAAG,EAAEI,MAAM,CAAC,CAAC;IAAE,CAAC,CAAC;IACjE,MAAMG,OAAO,GAAGZ,WAAW,CAAC;MAAEG,KAAK,EAAEM,MAAM,CAAC,CAAC,CAAC;MAAEJ,GAAG,EAAEI,MAAM,CAAC,CAAC;IAAE,CAAC,CAAC;IACjE,MAAMI,MAAM,GAAGb,WAAW,CAAC;MAAEG,KAAK,EAAEQ,OAAO;MAAEN,GAAG,EAAEO;IAAQ,CAAC,CAAC;IAE5D,OAAO,CAACH,MAAM,CAAC,CAAC,CAAC,EAAEI,MAAM,EAAEJ,MAAM,CAAC,CAAC,CAAC,CAAC;EACvC;EAEA,MAAME,OAAO,GAAGX,WAAW,CAAC;IAAEG,KAAK,EAAEM,MAAM,CAAC,CAAC,CAAC;IAAEJ,GAAG,EAAEI,MAAM,CAAC,CAAC;EAAE,CAAC,CAAC;EACjE,MAAMG,OAAO,GAAGZ,WAAW,CAAC;IAAEG,KAAK,EAAEM,MAAM,CAAC,CAAC,CAAC;IAAEJ,GAAG,EAAEI,MAAM,CAAC,CAAC;EAAE,CAAC,CAAC;EACjE,MAAMI,MAAM,GAAGb,WAAW,CAAC;IAAEG,KAAK,EAAEQ,OAAO;IAAEN,GAAG,EAAEO;EAAQ,CAAC,CAAC;AAC9D;AAACE,EAAA,GAfeN,oBAAoB;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}